<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!-- 配置整合mybatis过程 -->
	<!-- 配置数据库相关参数 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 数据库的连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${jdbc.driverClass}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30"/>
		<property name="minPoolSize" value="10"/>
		<!-- 调用close时是否commit，默认就是false，这里可以不写 -->
		<property name="autoCommitOnClose" value="false"/>
		<!-- 当连接池达到上限时 ，等待连接的超时时间（单位为毫秒），0为无限等待，会造成僵死-->
		<property name="checkoutTimeout" value="10000"/>
		<!-- 连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2"/>
	</bean>
	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 扫描entity包，使用别名,有多个包可在value中用分号";"隔开 -->
		<property name="typeAliasesPackage" value="org.myproject.entity"/>
		<!-- 扫描sql配置文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	<!-- 配置扫描dao接口包，动态实现dao接口,注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory,这里用的属性名不是sqlSessionFactory（过时），而是sqlSessionFactoryBeanName属性，是后加载的，
		在用到的时候才加载，防止加载时所需的属性，如dataSource，还没加载 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<!-- 给出需要扫描的dao接口包 -->
		<property name="basePackage" value="org.myproject.dao"/>
	</bean>
</beans>